// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package synapse

import (
	"github.com/apache/thrift/lib/go/thrift"
	"github.com/xh-polaris/synapse/biz/api/model/basicuser"
	"github.com/xh-polaris/synapse/biz/api/model/system"
)

type SystemService interface {
	system.SystemService
}

type SystemServiceClient struct {
	*system.SystemServiceClient
}

func NewSystemServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *SystemServiceClient {
	return &SystemServiceClient{
		SystemServiceClient: system.NewSystemServiceClientFactory(t, f),
	}
}

func NewSystemServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *SystemServiceClient {
	return &SystemServiceClient{
		SystemServiceClient: system.NewSystemServiceClientProtocol(t, iprot, oprot),
	}
}

func NewSystemServiceClient(c thrift.TClient) *SystemServiceClient {
	return &SystemServiceClient{
		SystemServiceClient: system.NewSystemServiceClient(c),
	}
}

type BasicUserService interface {
	basicuser.BasicUserService
}

type BasicUserServiceClient struct {
	*basicuser.BasicUserServiceClient
}

func NewBasicUserServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *BasicUserServiceClient {
	return &BasicUserServiceClient{
		BasicUserServiceClient: basicuser.NewBasicUserServiceClientFactory(t, f),
	}
}

func NewBasicUserServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *BasicUserServiceClient {
	return &BasicUserServiceClient{
		BasicUserServiceClient: basicuser.NewBasicUserServiceClientProtocol(t, iprot, oprot),
	}
}

func NewBasicUserServiceClient(c thrift.TClient) *BasicUserServiceClient {
	return &BasicUserServiceClient{
		BasicUserServiceClient: basicuser.NewBasicUserServiceClient(c),
	}
}

type SystemServiceProcessor struct {
	*system.SystemServiceProcessor
}

func NewSystemServiceProcessor(handler SystemService) *SystemServiceProcessor {
	self := &SystemServiceProcessor{system.NewSystemServiceProcessor(handler)}
	return self
}

type BasicUserServiceProcessor struct {
	*basicuser.BasicUserServiceProcessor
}

func NewBasicUserServiceProcessor(handler BasicUserService) *BasicUserServiceProcessor {
	self := &BasicUserServiceProcessor{basicuser.NewBasicUserServiceProcessor(handler)}
	return self
}
